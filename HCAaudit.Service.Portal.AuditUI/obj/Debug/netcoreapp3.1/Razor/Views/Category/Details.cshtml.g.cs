#pragma checksum "C:\HCAProject\HRAudit\HCAHRGPortal\HCAaudit.Service.Portal.AuditUI\Views\Category\Details.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8e7485b7957d9822cca914f404b8ee0ca541b7e2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Category_Details), @"mvc.1.0.view", @"/Views/Category/Details.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\HCAProject\HRAudit\HCAHRGPortal\HCAaudit.Service.Portal.AuditUI\Views\_ViewImports.cshtml"
using HCAaudit.Service.Portal.AuditUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\HCAProject\HRAudit\HCAHRGPortal\HCAaudit.Service.Portal.AuditUI\Views\_ViewImports.cshtml"
using HCAaudit.Service.Portal.AuditUI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\HCAProject\HRAudit\HCAHRGPortal\HCAaudit.Service.Portal.AuditUI\Views\_ViewImports.cshtml"
using HCAaudit.Service.Portal.AuditUI.ViewModel.Patient;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8e7485b7957d9822cca914f404b8ee0ca541b7e2", @"/Views/Category/Details.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"88be8cfa3e9748dac7fd5dc8935ddda98e9cef8b", @"/Views/_ViewImports.cshtml")]
    public class Views_Category_Details : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<HCAaudit.Service.Portal.AuditUI.Models.Categorys>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\HCAProject\HRAudit\HCAHRGPortal\HCAaudit.Service.Portal.AuditUI\Views\Category\Details.cshtml"
  
    ViewData["Title"] = " Category Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""></script>
<link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"">

<link href=""https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css"" rel=""stylesheet"" />
<link href=""https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css"" rel=""stylesheet"" />

<script src=""https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js""></script>
<script src=""https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js""></script>

<script src=""https://code.jquery.com/ui/1.11.1/jquery-ui.min.js""></script>
<link rel=""stylesheet"" href=""https://code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css"" />

<div class=""container"">
    <br />
    <div class=""row"">
        <div class=""col-sm-3""></div>
        <div class=""col-sm-3""></div>
        <div class=""col-sm-3""></div>
        <div class=""col-sm-3""><button type=""button"" id=""btnopenPopUp"" class=""bt");
            WriteLiteral(@"n btn-primary"">Add Category</button> </div>
    </div>

    <br />
    <div style=""width:90%; margin:0 auto;"">
        <table id=""example"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"">
            <thead>
                <tr>
                    <th>CatgID</th>
                    <th>Category Name</th>
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<div id=""popupcontent"" title=""Add Category"" hidden=""hidden"" class=""container"">

    <div class=""row"">
        <div class=""col-sm-2""> <label for=""format-pdf"" class=""input-group"">Category:</label></div>
        <div class=""col-sm-6"">
            <input id=""txtcategory"" class=""form-control form-control-sm""
                   type=""text"" />
            <span id=""errormsg"" style=""color:red"">Please enter Category</span>
        </div>
        <div class=""col-sm-4""></div>
    </div>
    <br />  ");
            WriteLiteral(@"
    <div class=""row"">
        <div class=""col-sm-2""></div>
        <div class=""col-sm-4""></div>
        <div class=""col-sm-6"">
            <button id=""btncancelpopup"" class=""btn btn-danger"">Cancel</button>&nbsp;
            <button id=""btnaddCategory"" class=""btn btn-primary"">
                Save Category
            </button>
        </div>
    </div>

</div>

<script>

    $(document).ready(function() {
        $(""#example"").DataTable({
            ""processing"": true, // for show progress bar
            ""serverSide"": true, // for process server side
            ""filter"": true, // this is for disable filter (search box)
            ""orderMulti"": false, // for disable multiple column at once
            ""ajax"": {
                ""url"": ""/Category/Details"",
                ""type"": ""POST"",
                ""datatype"": ""json""
            },
            ""columnDefs"": [{
                ""targets"": [0],
                ""visible"": false,
                ""searchable"": false
           ");
            WriteLiteral(@" }],
            ""columns"": [
                { ""data"": ""CatgID"", ""name"": ""CatgID"", ""autoWidth"": true },
                { ""data"": ""CatgDescription"", ""name"": ""CatgDescription"", ""autoWidth"": true },
                {
                    ""render"": function(data, type, full, meta) { return '<a class=""btn btn-info"" href=""/Category/Edit/' + full.CatgID + '"">Edit</a>'; }
                },
                {
                    data: null,
                    render: function(data, type, row) {
                        return ""<a href='#' class='btn btn-danger' onclick=DeleteData('"" + row.CatgID + ""'); >Delete</a>"";
                    }
                },
            ]

        });
    });

    $(function () {
        $(""#popupcontent"").dialog({
            autoOpen: false
        });

        $(""#btncancelpopup"").click(function () {
            $(""#popupcontent"").dialog('close');
        });

        $(""#btnopenPopUp"").click(function () {
            $(""#popupcontent"").dialog({
        ");
            WriteLiteral(@"        position: 'bottom'
            });
        });
    });

    $(""#popupcontent"").dialog({ autoOpen: false, modal: true, height: 190, width: 650 });

    $(""#btnopenPopUp"").click(function () {
        $(""#popupcontent"").dialog('open');
    });

    $('#txtcategory').on('keypress', function (event) {
        $('#errormsg').hide();
        var regex = new RegExp(""^[a-zA-Z]+$"");
        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
        if (!regex.test(key)) {
            event.preventDefault();
            return false;
        }
    });
    $('#errormsg').hide();
    $(""#btnaddCategory"").click(function () {

        var CategoryName = $('#txtcategory').val(); 
        if (CategoryName == """") { $('#errormsg').show(); }
        else {
            $.ajax({
                type: ""GET"",
                url: ""/category/Insert"",
                data: { ""CategoryName"": CategoryName },
                success: function (response) {
                ");
            WriteLiteral(@"    if (response == ""1"") {
                        alert(""Record already exists!"");
                    }
                    else {
                        $(""#popupcontent"").dialog('close');
                        $('#txtcategory').val("""");
                        location.reload();
                    }
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }

    });

function DeleteData(CatgID) {
    if (confirm(""Are you sure you want to delete ...?"")) {
        Delete(CatgID);
    } else {
        return false;
    }
}


function Delete(CatgID) {
    var url = '");
#nullable restore
#line 175 "C:\HCAProject\HRAudit\HCAHRGPortal\HCAaudit.Service.Portal.AuditUI\Views\Category\Details.cshtml"
          Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + ""Category/Delete"";

    $.post(url, { ID: CatgID }, function(data) {
        if (data) {
            oTable = $('#example').DataTable();
            oTable.draw();
        } else {
            alert(""Something Went Wrong!"");
        }
    });
}

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<HCAaudit.Service.Portal.AuditUI.Models.Categorys>> Html { get; private set; }
    }
}
#pragma warning restore 1591
