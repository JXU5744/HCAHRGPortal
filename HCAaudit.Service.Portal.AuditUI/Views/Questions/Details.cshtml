@{
    ViewData["Title"] = "Question Master";
}

<link href="~/lib/DataTables/DataTables/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
<link href="~/css/responsive.bootstrap4.min.css" rel="stylesheet" />

<script src="~/lib/jquery/jquery.min.js"></script>
<script src="~/lib/DataTables/DataTables/js/jquery.dataTables.min.js"></script>
<script src="~/lib/DataTables/DataTables/js/dataTables.bootstrap4.min.js"></script>
<script src="~/js/jquery-ui.min.js"></script>



@model List<HCAaudit.Service.Portal.AuditUI.Models.QuestionBank>

<div class="row neu-margin--bottom-16">
    <div class="col-12">
        <h3 align="center" class="neu-text--h3 neu-text--bold align-content-xl-center">Question Master</h3>
    </div>
</div>

<div class="row neu-margin--bottom-16">
    <div class="col-sm-12 d-flex justify-content-end">
        <button type="button" id="btnopenPopUp" class="neu-button--primary neu-button neu-button--raised">Add Question</button>
    </div>
</div>

<div class="row neu-margin--bottom-16">
    <div class="col-sm-12">
        <table id="example" class="neu-table neu-margin--vert-16" width="100%" cellspacing="0">
            <thead>
                <tr class="neu-table__row--large">
                    <th>QuestionId</th>
                    <th style="width:40%">Question Name</th>
                    <th style="width:40%">Question Description</th>
                    <th style="width:10%">Edit</th>
                    <th style="width:10%">Delete</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<div id="popupcontent" title="Add Question" hidden="hidden" class="container">
    <div class="row neu-margin--bottom-16">
        <div class="col-sm-12">
            <label class="neu-input__label" for="txtquestion">Question Name</label>
            <textarea id="txtquestion" rows="4" cols="80" style="resize:none"></textarea>
            <span id="errormsg" class="neu-button--danger">Please Enter or Select Question</span>
        </div>
    </div>
    <div class="row neu-margin--bottom-16">
        <div class="col-sm-12">
            <label class="neu-input__label" for="txtdescription">Question Description</label>
            <textarea id="txtdescription" rows="4" cols="80" style="resize:none;"></textarea>
            <span id="errordescriptionmsg" class="neu-button--danger">Please Enter Question Description</span>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12 neu-text--align-center">
            <button id="btnaddQuestion" class="neu-button--primary neu-button neu-button--raised">Save</button>
            <button id="btncancelpopup" class="neu-button--danger neu-button neu-button--raised neu-margin--left-10">Cancel</button>
        </div>
    </div>
</div>
<div id="popupcontentedit" title="Edit Question" hidden="hidden" class="container">
    <div class="row neu-margin--bottom-16">
        <div class="col-sm-12">
            <label class="neu-input__label" for="txtQuestionedit">Question Name</label>
            <textarea id="txtQuestionedit" rows="4" cols="80" style="resize:none"></textarea>
            <span id="errormsgedit" class="neu-button--danger">Please Enter or Select Question</span>
            <input id="hdnid" type="hidden" />
        </div>
    </div>
    <div class="row neu-margin--bottom-16">
        <div class="col-sm-12">
            <label class="neu-input__label" for="txtdescriptionedit">Question Description</label>
            <textarea id="txtdescriptionedit" rows="4" cols="80" style="resize:none;"></textarea>
            <span id="errordescriptionmsgedit" class="neu-button--danger">Please Enter Question Description</span>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12 neu-text--align-center">
            <button id="btnupdateQuestion" class="neu-button--primary neu-button neu-button--raised">Update</button>
            <button id="btncancelpopupedit" class="neu-button--danger neu-button neu-button--raised neu-margin--left-10">Cancel</button>
        </div>
    </div>

</div>

<div id="popupcontentdelete" title="Delete Question" hidden="hidden" class="container">
    <div class="row neu-margin--bottom-16">
        <div class="col-sm-12">
            <label id="lblcustomtextfor"></label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12 neu-text--align-center">
            <button id="btndeleteCategoryok" class="neu-button--primary neu-button neu-button--raised">OK</button>
            <button id="btndeleteQuestion" class="neu-button--primary neu-button neu-button--raised">Yes</button>
            <button id="btncancelpopupdelete" class="neu-button--danger neu-button neu-button--raised neu-margin--left-10">No</button>
            <input id="hdndeletecatid" type="hidden" />
        </div>
    </div>
</div>

<script>

    $(document).ready(function() {
        $("#example").DataTable({
            //"ordering": false,
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "ajax": {
                "url": "/Questions/Details",
                "type": "POST",
                "datatype": "json"
            },
            "columnDefs": [{
                "targets": [0],
                "visible": false,
                "searchable": false
            },
                {
                    "targets": [0, 3, 4],
                    "orderable": false
                }],
            "columns": [
                { "data": "QuestionId", "name": "QuestionId", "autoWidth": true },
                { "data": "QuestionName", "name": "QuestionName", "autoWidth": true },
                { "data": "QuestionDescription", "name": "QuestionDescription", "autoWidth": true },
                {
                    "render": function (data, type, full, meta) { return '<a class="neu-button--primary neu-button neu-button--link" href="javascript:void(0)" onclick=OpenEditpopup(' + full.QuestionId + ');>Edit</a>'; }
                },
                {
                    data: null,
                    render: function(data, type, row) {
                        return "<a href='#' class='neu-button--danger neu-button neu-button--link' onclick=DeleteData('" + row.QuestionId + "'); >Delete</a>";
                    }
                },
            ],
            "createdRow": function (row, data, dataIndex) {
                $(row).addClass('neu-table__row--small');
            }
        });
    });

    $(function () {

        $("#popupcontent").dialog({
            width: 'auto',
            autoOpen: false,
            draggable: false,
            resizable: false,
            modal: true
        });

        $("#popupcontentedit").dialog({
            width: 'auto',
            autoOpen: false,
            draggable: false,
            resizable: false,
            modal: true
        });

        $("#btncancelpopup").click(function () {
            $("#popupcontent").dialog('close');
        });

        $("#btncancelpopupedit").click(function () {
            $("#popupcontentedit").dialog('close');
        });

        $("#btnopenPopUp").click(function () {
            $("#txtquestion").val("");
            $("#txtdescription").val("");
            $('#errormsg').hide();
            $('#errordescriptionmsg').hide();

            $("#popupcontent").dialog({
                position: 'bottom'
            });
        });

        $("#btnupdateQuestion").click(function () {
            $("#popupcontentedit").dialog({
                position: 'bottom'
            });
        });
    });

    $("#btnopenPopUp").click(function () {
        $.ajax({
            type: "POST",
            url: "/Questions/GetCommaSeperated",
            data: null,
            success: function (response) {
                $("#txtquestion").autocomplete({
                    source: response
                });
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });

        $("#popupcontent").dialog('open');
    });

    
    $("#txtQuestionedit").keyup(function () {
        if (!this.value) {

            $.ajax({
                type: "POST",
                url: "/Questions/GetCommaSeperated",
                data: null,
                success: function (response) {
                    $("#txtQuestionedit").autocomplete({
                        source: response
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
            $("#popupcontentedit").dialog('open');
        }
    });


    $('#txtquestion').on('keypress', function (event) {
        $('#errormsg').hide();
    });

    $('#txtquestion').on('autocompleteselect', function (e, ui) {
        //alert(ui.item.value);
        $.ajax({
            type: "POST",
            url: "/Questions/GetDesbyQuesText",
            data: { "questionText": ui.item.value },
            success: function (response) {
                if (response == "nd") {
                    //$("#txtquestionDescription").val("");
                } else {
                    $("#txtdescription").val(response);
                }
            }
        });
    });

    $('#txtdescription').on('keypress', function (event) {
        $('#errordescriptionmsg').hide();
    });

    $('#txtQuestionedit').on('keypress', function (event) {
        $('#errormsgedit').hide();
    });

    $('#txtdescriptionedit').on('keypress', function (event) {
        $('#errordescriptionmsgedit').hide();
    });

    //$('#errormsgedit').hide();

    function OpenEditpopup(CatgID) {
        $("#hdnid").val(""); $("#hdnid").val(CatgID);
        $('#errormsgedit').hide(); $('#errordescriptionmsgedit').hide();

        $.ajax({
            type: "POST",
            url: "/Questions/GetQuestionByid",
            data: { "id": CatgID },
            success: function (response) {
                if (response != null && response != "") {
                    $("#txtQuestionedit").val(response.QuestionName);
                    $("#txtdescriptionedit").val(response.QuestionDescription);
                }
                $("#popupcontentedit").dialog('open');
            },
            failure: function (response) {
                 alert(response.responseText);
            },
            error: function (response) {
                  alert(response.responseText);
            }
        });
    }

    $("#btnupdateQuestion").click(function () {

        var questionName = $('#txtQuestionedit').val();
        var questionDesc = $('#txtdescriptionedit').val();

        if (questionName == "") { $("#errormsgedit").show(); $("#errormsgedit").text("Please Select or Enter Question"); return false; }
        if (questionDesc == "") { $("#errordescriptionmsgedit").show(); $("#errordescriptionmsgedit").text("Please Enter Question Description"); return false; }

        $.ajax({
            type: "POST",
            url: "/Questions/Edit",
            data: { "id": $('#hdnid').val() + "$" + $('#txtQuestionedit').val() + "$" + $('#txtdescriptionedit').val()},
            success: function (response) {
                if (response == "1") {
                    $("#errormsgedit").show(); $("#errormsgedit").text("Record already exists!");
                }
                else {
                    $("#popupcontentedit").dialog('close');
                    $('#txtQuestionedit').val("");
                    $('#txtdescriptionedit').val("");
                    location.reload();
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });

    });

    $("#btnaddQuestion").click(function () {

        var questionName = $('#txtquestion').val();
        var questionDesc = $('#txtdescription').val();

        if (questionName == "") { $("#errormsg").show(); $("#errormsg").text("Please Enter Question"); return false; }
        if (questionDesc == "") { $("#errordescriptionmsg").show(); $("#errordescriptionmsg").text("Please Enter Description"); return false; }
        $.ajax({
            type: "POST",
            url: "/Questions/Insert",
            data: { "questionname": questionName, "questiondesc": questionDesc },
            success: function (response) {
                if (response == "1") {
                    $("#errormsg").show(); $("#errormsg").text("Record already exists!");
                }
                else {
                    $("#popupcontent").dialog('close');
                    location.reload();
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });

    });


    $("#btndeleteQuestion").click(function () {
        $("#popupcontentdelete").dialog({
            position: 'bottom',
            draggable: false,
            resizable: false,
        });
    });


    $("#popupcontentdelete").dialog({
        autoOpen: false,
        modal: true,
        width: 'auto',
        draggable: false,
        resizable: false
    });


    $("#btncancelpopup").click(function () {
        $("#popupcontentdelete").dialog('close');
    });

    $("#btndeleteCategoryok").click(function () {
        $("#popupcontentdelete").dialog('close');
    });

    function DeleteData(CatgID) {
        $.ajax({
            type: "POST",
            url: "/Questions/HasDeleteAccessforQB",
            data: { "id": CatgID },
            success: function (response) {
                //alert(response);
                if (response == "NoRecords") {
                    $("#lblcustomtextfor").text("Do you want to Delete this Question?");
                    $("#popupcontentdelete").dialog('open');
                    $("#btndeleteCategoryok").hide();
                    $("#btndeleteQuestion").show();
                    $("#btncancelpopupdelete").show();
                    $("#hdndeletecatid").val(CatgID);
                }
                else if (response == "HasRecords") {
                    $("#lblcustomtextfor").text("Please remove Subcategory mapping and then delete this Question");
                    $("#popupcontentdelete").dialog('open');
                    $("#btndeleteCategoryok").show();
                    $("#btndeleteQuestion").hide();
                    $("#btncancelpopupdelete").hide();
                    //alert('Entered else');
                    //return trueOrFalse(false);
                }
            },
            failure: function (response) {
                // alert(response.responseText);
            },
            error: function (response) {
                //  alert(response.responseText);
            }
        });
    }



    $("#btncancelpopupdelete").click(function () {
        $("#popupcontentdelete").dialog('close');
    });

    $("#btndeleteQuestion").click(function () {
        $("#popupcontentdelete").dialog('close');
        var url = '@Url.Content("~/")' + "Questions/DeleteQuestionBank";

        $.post(url, { ID: $("#hdndeletecatid").val() }, function (data) {
            if (data) {
                oTable = $('#example').DataTable();
                oTable.draw();
            } else {
                alert("Something Went Wrong!");
            }
        });
    });

</script>