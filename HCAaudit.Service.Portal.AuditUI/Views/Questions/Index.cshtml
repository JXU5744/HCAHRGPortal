@{
    ViewData["Title"] = "Questions Mapping";
}


<link href="~/lib/DataTables/DataTables/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
<link href="~/css/responsive.bootstrap4.min.css" rel="stylesheet" />

<script src="~/lib/jquery/jquery.min.js"></script>
<script src="~/lib/DataTables/DataTables/js/jquery.dataTables.min.js"></script>
<script src="~/lib/DataTables/DataTables/js/dataTables.bootstrap4.min.js"></script>
<script src="~/js/jquery-ui.min.js"></script>

@model List<HCAaudit.Service.Portal.AuditUI.Models.QuestionMapping>

<div class="row neu-margin--bottom-16">
    <div class="col-12">
        <h3 align="center" class="neu-text--h3 neu-text--bold align-content-xl-center">Question Mapping</h3>
    </div>
</div>

<div class="container neu-margin--top-30">
    <form class="form-inline neu-margin--bottom-16">
        <div class="row d-flex align-items-end">
            <div class="col-sm-4">
                <label for="CatgID" class="neu-input__label">Service Delivery Group</label>
                <select name="teams" id="CatgID" class="neu-select" title="select"
                        asp-items="@(new SelectList(@ViewBag.ListOfCategory, "CatgID", "CatgDescription"))">
                </select>
            </div>
            <div class="col-sm-4">
                <label for="SubCatID" class="neu-input__label">Sub Category</label>
                <select name="teams" id="SubCatID" class="neu-select">
                </select>
            </div>
            <div class="col-sm-4">
                <button type="button" id="btnopenPopUp" class="neu-button neu-button--primary neu-button--raised">Map Question</button>
            </div>
        </div>
    </form>
</div>

<div class="row neu-margin--bottom-16">
    <div class="col-sm-12">
        <table id="tblquestions" class="neu-table neu-margin--vert-16" width="100%" cellspacing="0">
            <thead>
                <tr class="neu-table__row--large">
                    <th>Question Master ID</th>
                    <th style="width:10%">Question Sequence</th>
                    <th style="width:70%">Question Name</th>
                    <th style="width:10%">Edit</th>
                    <th style="width:10%">Delete</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@*<div id="popupcontent" title="Add Question Mapping" hidden="hidden" class="container">
        <div class="row neu-margin--bottom-16">
            <div class="col-sm-6">
                <label class="neu-input__label" for="txtcategory">Service Delivery Group</label>
                <input class="neu-input__field" aria-disabled="false" disabled="disabled" type="text" id="txtcategory">
            </div>
            <div class="col-sm-6">
                <label class="neu-input__label" for="txtsubcategory">Sub Category</label>
                <input class="neu-input__field" aria-disabled="false" disabled="disabled" type="text" id="txtsubcategory">
            </div>
        </div>

        <div class="row neu-margin--bottom-16">
            <div class="col-sm-6">
                <label class="neu-input__label" for="txtquestionseq">Question Sequence</label>
                <input id="txtquestionseq" class="neu-input__field" disabled="disabled" type="text" />
                <input id="hdnAddSubCatId" type="hidden" />
            </div>
        </div>

        <div class="row neu-margin--bottom-16">
            <div class="col-sm-12">
                <label class="neu-input__label" for="txtquestion">Question Name</label>
                <textarea id="txtquestion" class="neu-input__textarea" rows="2" cols="50" style="resize:none"></textarea>
                <span id="errormsgquestion" class="neu-button--danger">Please Enter or Select Question</span>
            </div>
        </div>

        <div class="row neu-margin--bottom-16">
            <div class="col-sm-12">
                <label class="neu-input__label" for="txtquestionDescription">Question Description</label>
                <textarea id="txtquestionDescription" class="neu-input__textarea" rows="5" cols="50" style="resize:none"></textarea>
                <span id="errormsgquestionDescription" class="neu-button--danger">Please Enter Question Description</span>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12 neu-text--align-center">
                <button id="btnaddQuestion" class="neu-button--primary neu-button neu-button--raised">Save</button>
                <button id="btncancelpopup" class="neu-button--danger neu-button neu-button--raised neu-margin--left-10">Cancel</button>
                <button id="btnresetpopup" class="neu-button--danger neu-button neu-button--raised neu-margin--left-10">Reset</button>
            </div>
        </div>

    </div>*@

<div id="popupcontent" title="Add Question Mapping" hidden="hidden" class="container">
    <div class="row neu-margin--bottom-16">
        <div class="col-sm-6">
            <label class="neu-input__label" for="txtcategory">Service Delivery Group</label>
            <input class="neu-input__field" aria-disabled="false" disabled="disabled" type="text" id="txtcategory">
        </div>
        <div class="col-sm-6">
            <label class="neu-input__label" for="txtsubcategory">Sub Category</label>
            <input class="neu-input__field" aria-disabled="false" disabled="disabled" type="text" id="txtsubcategory">
        </div>
    </div>

    <div class="row neu-margin--bottom-16">
        <div class="col-sm-12">
            <label class="neu-input__label" for="txtquestion">Question Name</label>
            <textarea id="txtquestion" rows="4" cols="80" disabled="disabled" style="resize:none;"></textarea>
            @*<textarea id="txtquestion" class="neu-input__textarea" rows="2" cols="50" style="resize:none"></textarea>*@
            <span id="errormsgquestion" class="neu-button--danger">Please Enter or Select Question</span>
        </div>
    </div>

    <div class="row neu-margin--bottom-16">
        <div class="col-sm-12">
            <label class="neu-input__label" for="txtquestionDescription">Question Description</label>
            <textarea id="txtquestionDescription" rows="4" cols="80" disabled="disabled" style="resize:none;"></textarea>
            <span id="errormsgquestionDescription" class="neu-button--danger">Please Enter Question Description</span>
        </div>
    </div>

    <div class="row neu-margin--bottom-16">
        <div class="col-sm-6">
            <label class="neu-input__label" for="txtquestionseq">Current Question Sequence</label>
            <input class="neu-input__field" aria-disabled="false" disabled="disabled" type="text" id="txtquestionseq">
            <input id="hdnAddSubCatId" type="hidden" />
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12 neu-text--align-center">
            <button id="btnaddQuestion" class="neu-button--primary neu-button neu-button--raised">Save</button>
            <button id="btncancelpopup" class="neu-button--danger neu-button neu-button--raised neu-margin--left-10">Cancel</button>
            <button id="btnresetpopup" class="neu-button--danger neu-button neu-button--raised neu-margin--left-10">Reset</button>
        </div>
    </div>

</div>

<div id="popupcontentedit" title="Edit Question Mapping" hidden="hidden" class="container">
    <div class="row neu-margin--bottom-16">
        <div class="col-sm-6">
            <label class="neu-input__label" for="txtcategoryEdit">Service Delivery Group</label>
            <input class="neu-input__field" aria-disabled="false" disabled="disabled" type="text" id="txtcategoryEdit">
        </div>
        <div class="col-sm-6">
            <label class="neu-input__label" for="txtsubcategoryEdit">Sub Category</label>
            <input class="neu-input__field" aria-disabled="false" disabled="disabled" type="text" id="txtsubcategoryEdit">
        </div>
    </div>

    <div class="row neu-margin--bottom-16">
        <div class="col-sm-12">
            <label class="neu-input__label" for="txtquestionEdit">Question Name</label>
            <textarea id="txtquestionEdit" rows="4" cols="80" disabled="disabled" style="resize:none;"></textarea>
        </div>
    </div>

    <div class="row neu-margin--bottom-16">
        <div class="col-sm-12">
            <label class="neu-input__label" for="txtquestionDescriptionEdit">Question Description</label>
            <textarea id="txtquestionDescriptionEdit" rows="4" cols="80" disabled="disabled" style="resize:none;"></textarea>
        </div>
    </div>

    <div class="row neu-margin--bottom-16">
        <div class="col-sm-6">
            <label class="neu-input__label" for="lblQuestionedit">Current Question Sequence</label>
            <input class="neu-input__field" aria-disabled="false" disabled="disabled" type="text" id="lblQuestionedit">
            <input id="hdnid" type="hidden" />
            <input id="hdnSubCatId" type="hidden" />
        </div>
        <div class="col-sm-6">
            <label class="neu-input__label" for="ddlQuestionsqedit">New Question Sequence</label>
            <select name="ddlQuestionsqedit" id="ddlQuestionsqedit" class="neu-select"></select>
            <span id="errormsgsqedit" class="neu-button--danger neu-button--small">Please choose the Sequence</span>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12 neu-text--align-center">
            <button id="btnupdateQuestion" class="neu-button--primary neu-button neu-button--raised">Update</button>
            <button id="btncancelpopupedit" class="neu-button--danger neu-button neu-button--raised neu-margin--left-10">Cancel</button>
        </div>
    </div>

</div>

<div id="popupcontentdelete" title="Delete Question" hidden="hidden" class="container">
    <div class="row neu-margin--bottom-16">
        <div class="col-sm-12"><label id="lblcustomtextfor"></label></div>
    </div>
    <div class="row">
        <div class="col-sm-12"><input id="hdndeletecatid" type="hidden" /></div>
        <div class="col-sm-12 neu-text--align-center">
            <button id="btndeleteQuestion" class="neu-button--primary neu-button neu-button--raised">Yes</button>
            <button id="btncancelpopupdelete" class="neu-button--danger neu-button neu-button--raised neu-margin--left-10">No</button>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $(function () {
            $("#CatgID").prop("selectedIndex", 1);
            $('#CatgID').trigger('change');

            $("#popupcontent").dialog({
                width: 'auto',
                height: 'auto',
                autoOpen: false,
                draggable: false,
                resizable: false
            });

            $("#btncancelpopup").click(function () {
                $("#popupcontent").dialog('close');
            });

            $("#btnopenPopUp").click(function () {
                $("#popupcontent").dialog({
                    position: 'bottom',

                });
            });
            $("#popupcontentedit").dialog({
                width: 'auto',
                height :'auto',
                autoOpen: false,
                draggable: false,
                resizable: false
            });
            $("#btncancelpopupedit").click(function () {
                $("#popupcontentedit").dialog('close');
            });
        });


        $("#btnopenPopUp").click(function () {
            var subCategoryID = $("#SubCatID").val();
            $("#txtquestion").val("");
            $("#txtquestionDescription").val("");
            $("#txtquestionDescription").prop("disabled", false);
            $("#txtquestion").prop("disabled", false);
            var subCategoryname = $("#SubCatID option:selected").text();
            var categoryname = $("#CatgID option:selected").text();
            $('#txtcategory').val(categoryname);
            $('#txtsubcategory').val(subCategoryname);
            $('#errormsgquestion').hide();
            $('#errormsgquestionDescription').hide();
            $('#hdnAddSubCatId').val(subCategoryID);
            var tblRowCount = $('#tblquestions').DataTable();
            var rowCount = tblRowCount.rows().count();

            if (!tblRowCount.data().any()) {
                rowCount = 0
            }
                $('#txtquestionseq').val(rowCount + 1);

            $.ajax({
                type: "POST",
                url: "/Questions/GetIndexCommaSeperated",
                data: { "subCategoryID": subCategoryID },
                success: function (response) {
                    $("#txtquestion").autocomplete({
                        source: response
                    });
                    $("#popupcontent").dialog('open');
                },
                failure: function (response) {
                    //alert(response.responseText);
                },
                error: function (response) {
                    //alert(response.responseText);
                }
            });
            $("#popupcontent").dialog('open');
        });

        $("#btncancelpopup").click(function () {
            $("#popupcontent").dialog('close');
        });


        $("#btnopenPopUp").hide();
        $('#errormsg').hide();
        $('#errormsgquestion').hide();
        $('#errormsgquestionDescription').hide();

        //

        //$("#popupcontent").dialog({ autoOpen: false, modal: true, height: 190, width: 650 });

        //$("#popupcontent").dialog({ autoOpen: false, modal: true, height: 400, width: 950 });


        //$("#btnresetpopup").click(function () {
        //    $('#txtquestion').val()="";
        //    $('#txtquestionDescription').val()="";
        //});


        $("#txtquestion").keypress(function (e) {

            $("#errormsgquestion").hide();
        });
        $("#txtquestionDescription").keypress(function (e) {
            $("#errormsgquestionDescription").hide();
        });

        $("#txtquestionDescription").click(function (e) {
            $.ajax({
                type: "POST",
                url: "/Questions/GetDesbyQuesText",
                data: { "questionText": $("#txtquestion").val() },
                success: function (response) {
                    if (response == "nd") {
                        //$("#txtquestionDescription").val("");
                        $("#txtquestionDescription").prop("disabled", false);
                        $("#txtquestion").prop("disabled", false);
                    } else {
                        $("#txtquestionDescription").val(response);
                        $("#txtquestionDescription").prop("disabled", true);
                        $("#txtquestion").prop("disabled", true);

                    }
                }
            });
            //$("#txtquestionDescription").val($("#txtquestion").val());
            //$("#txtquestionDescription").prop("disabled", true);
            //$("#txtquestion").prop("disabled", true);
            //$("#errormsgquestionDescription").hide();
        });

        $("#btnresetpopup").click(function () {
            $("#txtquestionDescription").val("");
            $("#txtquestion").val("");
            $("#txtquestionDescription").prop("disabled", false);
            $("#txtquestion").prop("disabled", false);
        });

        $("#btnaddQuestion").click(function () {

            if ($('#txtquestion').val() == "")
            {
                $('#errormsgquestion').show();
                     return false;
            }

            if ($('#txtquestionDescription').val() == "") {
                $('#errormsgquestionDescription').show();
                 return false;
            }

            var subCategoryID = $('#SubCatID').val() + "^" + $('#txtquestion').val() + "^" + $("#txtquestionDescription").val() + "^" + $("#txtquestionseq").val();
            $.ajax({
                type: "POST",
                url: "/Questions/SaveQuestionForMaster",
                data: { "subcatgid": subCategoryID },
                success: function (response) {
                    if (response == "2") {
                        $('#errormsgquestion').show(); $('#errormsgquestion').text("Not a valid Question");
                    }
                    else {
                        $("#popupcontent").dialog('close');
                        //location.reload();
                        $(function () {
                            var subCategoryID = $('#SubCatID').val();
                            $.ajax({
                                type: "Get",
                                url: "/Questions/BindGrid",
                                data: { "subCategoryID": subCategoryID },
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: function (response) {
                                    $("#tblquestions").DataTable(
                                        {
                                            destroy: true,
                                            bLengthChange: false,
                                            lengthMenu: [[5, 10, -1], [5, 10, "All"]],
                                            bFilter: false,
                                            bSort: false,
                                            bPaginate: false,
                                            data: response,

                                            "columnDefs": [{
                                                "targets": [0],
                                                "visible": false,
                                                "searchable": false
                                            },
                                                {
                                                    "targets": [0, 3, 4],
                                                    "orderable": false
                                                }],

                                            columns: [{ 'data': 'QuestionMappingId' },
                                                { 'data': 'SequenceNo' },
                                                { 'data': 'QuestionText' },
                                            {

                                                  "render": function (data, type, full, meta) { return "<a href='#' class='neu-button--primary neu-button neu-button--link'  onclick=OpenEditpopup('" + full.QuestionMappingId + "');>Edit</a>"; }
                                            },
                                            {
                                                data: null,
                                                render: function (data, type, row) {
                                                    return "<a href='#' class='neu-button--danger neu-button neu-button--link' onclick=DeleteData('" + row.QuestionMappingId + "'); >Delete</a>";
                                                }
                                                },
                                            ],
                                            "createdRow": function (row, data, dataIndex) {
                                                $(row).addClass('neu-table__row--small');
                                            }
                                        });
                                },
                                failure: function (response) {
                                   // alert(response.d);
                                },
                                error: function (response) {
                                   // alert(response.d);
                                }
                            });
                        });
                        //function OnSuccess(response) {
                        //    var records = response.length;


                        //};
                    }
                },
                failure: function (response) {
                   // alert(response.responseText);
                },
                error: function (response) {
                    //alert(response.responseText);
                }
            });
        });

        $("#CatgID").change(function () {
            var categoryID = $('#CatgID').val();
            $.ajax({
                type: "POST",
                url: "/Questions/BindSubCategory",
                data: { "categoryID": categoryID },
                success: function (response) {
                    $('#SubCatID').html(''); //$("#ShowQuestions").hide();
                    var options = '';
                    options += '<option value="Select">Select SubCategory</option>';
                    for (var i = 0; i < response.length; i++) {
                        options += '<option value="' + response[i].SubCatgID + '">' + response[i].SubCatgDescription + '</option>';
                    }
                    $('#SubCatID').append(options);
                    $("#SubCatID").prop("selectedIndex", 1);
                    $('#SubCatID').trigger('change');
                },
                failure: function (response) {
                    //alert(response.responseText);
                },
                error: function (response) {
                    //alert(response.responseText);
                }
            });

        });



        $("#chkblanksubcat").change(function () {
            if (this.checked) {
                $("#SubCatID").prop("disabled", true);
            } else {
                $("#SubCatID").prop("disabled", false);
            }
        });

        $("#SubCatID").change(function () {
            var subCategoryID = $('#SubCatID').val();
            $("#btnopenPopUp").show();
            $.ajax({
                type: "Get",
                url: "/Questions/BindGrid",
                data: { "subCategoryID": subCategoryID },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#tblquestions").DataTable(
                        {
                            destroy: true,
                            bLengthChange: false,
                            lengthMenu: [[5, 10, -1], [5, 10, "All"]],
                            bFilter: false,
                            bSort: false,
                            bPaginate: false,
                            data: response,

                            "columnDefs": [{
                                "targets": [0],
                                "visible": false,
                                "searchable": false
                            },
                                {
                                    "targets": [0, 3, 4],
                                    "orderable": false
                                }],

                            columns: [{ 'data': 'QuestionMappingId' },
                                { 'data': 'SequenceNo' },
                                { 'data': 'QuestionText' },
                            {
                                "render": function (data, type, full, meta) { return "<a href='#' class='neu-button--primary neu-button neu-button--link'  onclick=OpenEditpopup('" + full.QuestionMappingId + "');>Edit</a>"; }
                            },
                            {
                                data: null,
                                render: function (data, type, row) {
                                    return "<a href='#' class='neu-button--danger neu-button neu-button--link' onclick=DeleteData('" + row.QuestionMappingId + "'); >Delete</a>";
                                }
                                },
                            ],
                            "createdRow": function (row, data, dataIndex) {
                                $(row).addClass('neu-table__row--small');
                            }
                        });
                },
            });
        });

        $("#popupcontentdelete").dialog({
            autoOpen: false,
            draggable: false,
            resizable: false
        });


        $("#btncancelpopupdelete").click(function () {
            $("#popupcontentdelete").dialog('close');
        });


        $("#btndeleteQuestion").click(function () {
            $("#popupcontentdelete").dialog({
                position: 'bottom',
                draggable: false,
                resizable: false
            });
        });

        $("#popupcontentdelete").dialog({
            autoOpen: false, modal: true, width: 'auto' , draggable: false,
            resizable: false});

        $("#btncancelpopup").click(function () {
            $("#popupcontentdelete").dialog('close');
        });

        $("#popupcontentedit").dialog({
            autoOpen: false, draggable: false,
            resizable: false
        });

        $("#btnupdateQuestion").click(function () {

            var selectedQuestionId = $("#hdnid").val();

            var oldseqno = $("#lblQuestionedit").val();

            var selectedSubCatId = $("#hdnSubCatId").val();

            var newquestId = $("#ddlQuestionsqedit").val();

            var newseqno = $("#ddlQuestionsqedit option:selected").text();



            if (selectedQuestionId == newquestId) {
                $("#popupcontentedit").dialog('close');
            }



            $.ajax({
                type: "POST",
                url: "/questions/EditQuestionSequence",
                data: {
                    "newquestionId": newquestId,
                    "newsequenceno": newseqno,
                    "cquestionid": selectedQuestionId,
                    "csequenceno": oldseqno
                    },
                success: function (response) {
                    if (response == "2") {
                        $('#errormsgsqedit').show(); $('#errormsgsqedit').text("Invalid Sequence");
                    }
                    else {
                        $("#popupcontentedit").dialog('close');
                        //location.reload();
                        $(function () {
                            var subCategoryID = selectedSubCatId;
                            $.ajax({
                                type: "Get",
                                url: "/Questions/BindGrid",
                                data: { "subCategoryID": subCategoryID },
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: function (response) {
                                    $("#tblquestions").DataTable(
                                        {
                                            destroy: true,
                                            bLengthChange: false,
                                            lengthMenu: [[5, 10, -1], [5, 10, "All"]],
                                            bFilter: false,
                                            bSort: true,
                                            bPaginate: false,
                                            data: response,

                                            "columnDefs": [{
                                                "targets": [0],
                                                "visible": false,
                                                "searchable": false
                                            },
                                                {
                                                    "targets": [0, 3, 4],
                                                    "orderable": false
                                                }],

                                            columns: [
                                                { 'data': 'QuestionMappingId' },
                                                { 'data': 'SequenceNo' },
                                                { 'data': 'QuestionText' },
                                            {
                                                "render": function (data, type, full, meta) { return "<a href='#' class='neu-button--primary neu-button neu-button--link'  onclick=OpenEditpopup('" + full.QuestionMappingId + "');>Edit</a>"; }
                                            },
                                            {
                                                data: null,
                                                render: function (data, type, row) {
                                                    return "<a href='#' class='neu-button--danger neu-button neu-button--link' onclick=DeleteData('" + row.QuestionMappingId + "'); >Delete</a>";
                                                }
                                                },],
                                            "createdRow": function (row, data, dataIndex) {
                                                $(row).addClass('neu-table__row--small');
                                            }
                                        });
                                },
                                failure: function (response) {
                                    // alert(response.d);
                                },
                                error: function (response) {
                                    // alert(response.d);
                                }
                            });
                        });
                        //function OnSuccess(response) {
                        //    var records = response.length;


                        //};
                    }
                },
                failure: function (response) {
                    // alert(response.responseText);
                },
                error: function (response) {
                    //  alert(response.responseText);
                }
            });
        });

        //$("#popupcontentedit").dialog({ autoOpen: false, modal: true, height: 350, width: 650 });

        $("#btncancelpopupedit").click(function () {
            $("#popupcontentedit").dialog('close');
        });


        //$("#btncancelpopup").click(function () {
        //    $("#popupcontentdelete").dialog('close');
        //});

        $("#btndeleteQuestion").click(function () {
            var url = '@Url.Content("~/")' + "Questions/DeleteQuestionMaster";
            $("#popupcontentdelete").dialog('close');
            $.post(url, { ID: $("#hdndeletecatid").val() , SubCatId: $('#SubCatID').val() }, function (data) {
                if (data) {
                    oTable = $('#example').DataTable();
                    oTable.draw();
                } else {
                    alert("Something Went Wrong!");
                }
            });
            location.reload();
        });

    });

    function DeleteData(CatgID) {
        $("#lblcustomtextfor").text("Do you want to Delete this Question Mapping");
       $("#popupcontentdelete").dialog('open');
        $("#hdndeletecatid").val(CatgID);
    }

    function OpenEditpopup(CatgID) {
        var subCategoryID = $('#SubCatID').val();
        var subCategoryname = $("#SubCatID option:selected").text();
        var categoryname = $("#CatgID option:selected").text();
        $('#txtcategoryEdit').val(categoryname);
        $('#txtsubcategoryEdit').val(subCategoryname);
        $("#hdnid").val("");
        $("#hdnid").val(CatgID);
        $("#hdnSubCatId").val(subCategoryID);
        $('#errormsgsqedit').hide();
        var subcatid = $('#SubCatID').val();
        $.ajax({
            type: "POST",
            url: "/questions/GetQuestionSeqByid",
            data: { "id": CatgID, "subcatid": subcatid, "actionQid": CatgID},
            success: function (response) {
                if (response != null && response != "") {
                    $('#ddlQuestionsqedit').html(''); //$("#ShowQuestions").hide();
                    var options = ''; var index = 0;
                    for (var i = 0; i < response.length; i++) {
                        //alert(response[i].QuestionMappingId); alert(response[i].SequenceNo);
                        options += '<option value="' + response[i].QuestionMappingId + '">' + response[i].SequenceNo + '</option>';
                        if (response[i].QuestionMappingId == CatgID) {
                            index = response[i].SequenceNo;
                            $("#txtquestionEdit").val(response[i].QuestionText);
                            $("#txtquestionDescriptionEdit").val(response[i].QuestionDesc);
                            $("#lblQuestionedit").val(response[i].SequenceNo);
                        }
                    }
                    $('#ddlQuestionsqedit').append(options);
                    $("#ddlQuestionsqedit").prop("selectedIndex", --index);
                    $("#popupcontentedit").dialog('open');
                }
            },
            failure: function (response) {
                // alert(response.responseText);
            },
            error: function (response) {
                //  alert(response.responseText);
            }
        });
    }
</script>

