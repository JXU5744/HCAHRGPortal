@model HCAaudit.Service.Portal.AuditUI.ViewModel.DisputeModel
@{
    ViewData["Title"] = "Home Page";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.13/css/bootstrap-multiselect.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css" rel="stylesheet" />

<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.13/js/bootstrap-multiselect.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<link href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css" rel="stylesheet" />

<script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js"></script>

<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
    /** {
        box-sizing: border-box;
    }

    #myInput {
        background-image: url('/css/searchicon.png');
        background-position: 10px 12px;
        background-repeat: no-repeat;
        width: 100%;
        font-size: 16px;
        padding: 12px 20px 12px 40px;
        border: 1px solid #ddd;
        margin-bottom: 12px;
    }

    #myUL {
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

        #myUL li a {
            border: 1px solid #ddd;
            margin-top: -1px;*/ /* Prevent double borders */
            /*background-color: #f6f6f6;
            padding: 12px;
            text-decoration: none;
            font-size: 18px;
            color: black;
            display: block
        }

            #myUL li a:hover:not(.header) {
                background-color: #eee;
            }

    textarea {
        overflow-y: scroll;
        height: 100px;
        resize: none;*/ /* Remove this if you want the user to resize the textarea */
    /*}*/

</style>


<div class="col-12" id="DisputeContainer">
    <div>
        <h2>Dispute</h2>

        @if (Model.AuditNonComplianceModel.Count() > 0)
        {
        <div class="panel-group">
            @Html.HiddenFor(x => Model.AuditNonComplianceModel[0].TicketId)

            

            <div class="panel panel-default">
                @*<div class="panel-heading">Audit Details for Ticket : @Model.AuditNonComplianceModel[0].TicketId </div>*@

                <div class="panel-heading">Audit Details for Ticket : 1001 </div>

                <div class="panel-body">
                    <div class="col-lg-4">
                        <div>
                            <span class="d-inline-block"><strong>Agent Name : </strong></span><span>@Model.AuditMain.AgentName</span>
                        </div>
                        <br />
                        <div>
                            <span class="d-inline-block"><strong>Agent 3/4 ID : </strong> </span><span>@Model.AuditMain.Agent34ID</span>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div>
                            <span class="d-inline-block"><strong>Auditor Name : </strong></span><span>@Model.AuditMain.AuditorName </span>
                        </div>
                        <br />
                        <div>
                            <span class="d-inline-block"><strong>Date : </strong></span><span>@Model.AuditMain.SubmitDT</span>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div>
                            <span class="d-inline-block"><strong>Sub Category Id : </strong></span><span>@Model.AuditMain.SubcategoryID</span>
                        </div>
                        <br />
                        <div>
                            <span class="d-inline-block"><strong>Service Group Id : </strong></span><span>@Model.AuditMain.ServiceGroupID</span>
                        </div>
                    </div>
                </div>
            </div>


            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="well">
                        <table class="table table-striped" id="disputeDataTable" style="opacity: 1">
                            <thead style="align-content:center">
                                <tr>
                                    <th>Question ID</th>
                                    <th>Question Rank</th>
                                    <th style="width:20%">Question</th>
                                    <th>Is Compliance</th>
                                    <th>Is Non-Compliance</th>
                                    <th>Is Correction Required</th>
                                    <th style="width:20%">Non-compliance Comments</th>
                                    <th>Grace Period</th>
                                    <th>Overturn</th>
                                    <th style="width:20%">comments</th>
                                </tr>
                            </thead>
                            <tbody>

                                @for (int i = 0; i < Model.AuditNonComplianceModel.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @Html.HiddenFor(x => x.AuditNonComplianceModel[i].QuestionId)
                                            @Html.DisplayFor(x => x.AuditNonComplianceModel[i].QuestionId)
                                        </td>
                                        <td>
                                            @Html.HiddenFor(x => x.AuditNonComplianceModel[i].QuestionRank)
                                            @Html.DisplayFor(x => x.AuditNonComplianceModel[i].QuestionRank)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(x => x.AuditNonComplianceModel[i].Question)
                                        </td>
                                        <td>

                                            @Html.Label((Model.AuditNonComplianceModel[i].IsCompliant == true ? "Yes" : "No"))
                                        </td>
                                        <td>
                                            @Html.Label((Model.AuditNonComplianceModel[i].IsNonCompliant == true ? "Yes" : "No"))
                                        </td>
                                        <td>
                                            @Html.Label((Model.AuditNonComplianceModel[i].IsCorrectionRequired == true ? "Yes" : "No"))
                                        </td>
                                        <td>
                                            @Html.DisplayFor(x => x.AuditNonComplianceModel[i].NonComplianceComments)
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(x => x.AuditNonComplianceModel[i].GracePeriodId, Model.GracePeriod)
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(x => x.AuditNonComplianceModel[i].OverturnId, Model.Overturn)
                                        </td>
                                        <td style="width:20%">
                                            @Html.TextAreaFor(x => x.AuditNonComplianceModel[i].Comment, 2, 3, new { @class = "form-control" })
                                        </td>

                                    </tr>

                                }
                            </tbody>
                            <tfoot></tfoot>
                        </table>
                    </div>
                </div>

            </div>
        </div>
        }
    </div>
</div>
<div class="col-lg-12">
    <div class="float-right">
        <button type="button" id="btnSave" class="btn btn-primary float-right"> Save</button>
        <button type="button" id="btnCancel" class="btn btn-secondary float-right"> Cancel</button>
    </div>
</div>



    @section Scripts
    {
        <!-- Script for the date range picker -->
        <script type="text/javascript" src="~/js/daterangepicker.js"></script>
        <link rel="stylesheet"
              type="text/css"
              href="~/css/daterangepicker.css" />

        <script type="text/javascript" src="~/js/dispute.js"></script>

        <!-- Script for the date range picker -->
        @*<script type="text/javascript">
                $(document).ready(function () {
                    $('.datepicker').datepicker();
                    $("#CatgID").change(function () {
                        var categoryID = $('#CatgID').val();
                        $.ajax({
                            type: "POST",
                            url: "/search/BindSubCategory",
                            data: { "categoryID": categoryID },
                            success: function (response) {
                                $('#SubCatID').html(''); $("#ShowQuestions").hide();
                                var options = '';
                                options += '<option value="Select">Select SubCategory</option>';
                                for (var i = 0; i < response.length; i++) {
                                    options += '<option value="' + response[i].subCatgID + '">' + response[i].subCatgDescription + '</option>';
                                }
                                $('#SubCatID').append(options);
                            },
                            failure: function (response) {
                                alert(response.responseText);
                            },
                            error: function (response) {
                                alert(response.responseText);
                            }
                        });

                    });

                });

                $(function () {
                    $('input[name="dtstartdate"]').daterangepicker({
                        singleDatePicker: true,
                        showDropdowns: true,
                        minYear: 1901,
                        maxYear: parseInt(moment().format('YYYY'), 10)
                    });
                    $('input[name="dtenddate"]').daterangepicker({
                        singleDatePicker: true,
                        showDropdowns: true,
                        minYear: 1901,
                        maxYear: parseInt(moment().format('YYYY'), 10)
                    });
                });
                $("#btnaddCategory").click(function () {

                    var subCategoryName = $('#txtcategory').val(); // + "^" + $('#txtquestion').val() + "^" + $("#txtquestionvolumn").val();
                    $.ajax({
                        type: "POST",
                        url: "/category/Insert",
                        data: { "subcatgname": subCategoryName },
                        success: function (response) {
                            $("#popupcontent").dialog('close');
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });

                });
            </script>*@
    }

    @*<script>
            $(document).ready(function () {
                $('select').multiselect({
                    templates: { // Use the Awesome Bootstrap Checkbox structure
                        li: '<li class="checkList"><a tabindex="0"><div class="aweCheckbox aweCheckbox-danger"><label for=""></label></div></a></li>'
                    }
                });
                $('.multiselect-container div.aweCheckbox').each(function (index) {

                    var id = 'multiselect-' + index,
                        $input = $(this).find('input');

                    // Associate the label and the input
                    $(this).find('label').attr('for', id);
                    $input.attr('id', id);

                    // Remove the input from the label wrapper
                    $input.detach();

                    // Place the input back in before the label
                    $input.prependTo($(this));

                    $(this).click(function (e) {
                        // Prevents the click from bubbling up and hiding the dropdown
                        e.stopPropagation();
                    });

                });
            });
        </script>*@

    <style>
        /*body {
            padding: 20px;
        }

        form {
            max-width: 500px;
            margin: auto;
        }

        .aweCheckbox {
            padding-left: 20px;
        }

            .aweCheckbox label {
                display: inline-block;
                vertical-align: middle;
                position: relative;
                padding: 0 20px 0 10px;
                cursor: pointer;
            }

                .aweCheckbox label::before {
                    content: "";
                    display: inline-block;
                    position: absolute;
                    width: 17px;
                    height: 17px;
                    left: 0;
                    margin-left: -20px;
                    border: 1px solid #cccccc;
                    border-radius: 3px;
                    background-color: #fff;
                    -webkit-transition: border 0.15s ease-in-out, color 0.15s ease-in-out;
                    -o-transition: border 0.15s ease-in-out, color 0.15s ease-in-out;
                    transition: border 0.15s ease-in-out, color 0.15s ease-in-out;
                }

                .aweCheckbox label::after {
                    display: inline-block;
                    position: absolute;
                    width: 16px;
                    height: 16px;
                    left: 0;
                    top: 0;
                    margin-left: -20px;
                    padding-left: 3px;
                    padding-top: 1px;
                    font-size: 11px;
                    color: #555555;
                }

            .aweCheckbox input[type="checkbox"] {
                opacity: 0;
                z-index: 1;
            }

                .aweCheckbox input[type="checkbox"]:focus + label::before {
                    outline: thin dotted;
                    outline: 5px auto -webkit-focus-ring-color;
                    outline-offset: -2px;
                }

                .aweCheckbox input[type="checkbox"]:checked + label::after {
                    font-family: "FontAwesome";
                    content: "\f00c";
                }

                .aweCheckbox input[type="checkbox"]:indeterminate + label::after {
                    display: block;
                    content: "";
                    width: 10px;
                    height: 3px;
                    background-color: #555555;
                    border-radius: 2px;
                    margin-left: -16.5px;
                    margin-top: 7px;
                }

                .aweCheckbox input[type="checkbox"]:disabled + label {
                    opacity: 0.65;
                }

                    .aweCheckbox input[type="checkbox"]:disabled + label::before {
                        background-color: #eeeeee;
                        cursor: not-allowed;
                    }

            .aweCheckbox.aweCheckbox-circle label::before {
                border-radius: 50%;
            }

            .aweCheckbox.aweCheckbox-inline {
                margin-top: 0;
            }

        .aweCheckbox-danger input[type="checkbox"]:checked + label::before {
            background-color: #d9534f;
            border-color: #d9534f;
        }

        .aweCheckbox-danger input[type="checkbox"]:checked + label::after {
            color: #fff;
        }

        .aweCheckbox-danger input[type="checkbox"]:indeterminate + label::before {
            background-color: #d9534f;
            border-color: #d9534f;
        }

        .aweCheckbox-danger input[type="checkbox"]:indeterminate + label::after {
            background-color: #fff;
        }

        input[type="checkbox"].styled:checked + label:after {
            font-family: 'FontAwesome';
            content: "\f00c";
        }

        input[type="checkbox"] .styled:checked + label::before {
            color: #fff;
        }

        input[type="checkbox"] .styled:checked + label::after {
            color: #fff;
        }*/
    </style>

